@use 'sass:math';
@use '@/styles/utils' as utils;

$background: linear-gradient(
    150deg,
    var(---kvlm-navigation-background-from) 0%,
    var(---kvlm-navigation-background-to) 100%
  )
  no-repeat top / 100vw 100vh;

// prettier-ignore
:host {
  ---kvlm-navigation-background-from: var(--kvlm-navigation-background-from, var(--kvlm-color-turquoise, #fff));
  ---kvlm-navigation-background-to: var(--kvlm-navigation-background-to, var(--kvlm-color-spray, #fff));
  ---kvlm-navigation-color-typo: var(--kvlm-navigation-color-typo, var(--kvlm-color-grey-dark, #000));
  ---kvlm-navigation-height: var(--kvlm-navigation-height, var(---kvlm-layout-header-offset, 100px));
  ---kvlm-navigation-scroll-distance: var(--kvlm-navigation-scroll-distance, 0);
  ---kvlm-navigation-stroke-color: var(--kvlm-navigation-stroke-color, currentColor);
  ---kvlm-navigation-stroke-width: var(--kvlm-navigation-stroke-width, #{utils.size(0.4)});

  ---kvlm-navigation-shadow-spread: calc(#{utils.size(5)} * var(---kvlm-navigation-scroll-distance));
  ---kvlm-navigation-shadow-opacity: calc(0.3 * var(---kvlm-navigation-scroll-distance));
}

:host {
  display: flex;
  flex-direction: row;

  box-shadow: 0 0 var(---kvlm-navigation-shadow-spread)
    rgba(0, 0, 0, var(---kvlm-navigation-shadow-opacity));
  color: var(---kvlm-navigation-color-typo);
  background: $background;
  font-family: var(--kvlm-font-family-body);

  height: var(---kvlm-layout-header-offset);

  transition: 0.3s ease;
  transition-property: color, height;

  @include utils.container($until: lg) {
    ---kvlm-navigation-desktop: 0;
    ---kvlm-navigation-mobile: 1;

    background: $background;
    overflow: hidden;
  }

  @include utils.container($from: lg) {
    ---kvlm-navigation-desktop: 1;
    ---kvlm-navigation-mobile: 0;

    align-items: center;
  }
}

:host([opened]) {
  @include utils.container($until: lg) {
    height: 100vh;
    height: 100svh;
  }
}

nav {
  display: flex;

  @include utils.container($until: lg) {
    flex-direction: column;
    gap: utils.size(3);
    padding: utils.size(4);
    width: 100vw;
  }

  @include utils.container($from: lg) {
    @include utils.wrapper($padding: 0 utils.size(5));
    align-items: center;
    flex-direction: row;
    gap: utils.size(5);
  }
}

a:first-child {
  color: inherit;

  @include utils.container($until: lg) {
    display: flex;
    flex-direction: row;
    align-items: center;
    margin-bottom: utils.size(5);
  }

  @include utils.container($from: lg) {
    margin-right: auto;
  }

  kvlm-logo {
    --kvlm-logo-brook-color: #fff;
    ---kvlm-logo-typo-color: inherit;

    display: block;
    height: utils.size(4.6);
    // offset the logo to align with the typo with the content
    // the first letter is set to 7.8 in a container with 246.2 width
    transform: translateX(#{math.div(7.8, 246.2) * 10 - 1%});
    transition: color 0.3s ease;

    @include utils.container($until: lg) {
      margin-right: auto;
    }
  }

  svg {
    fill: none;
    stroke: var(---kvlm-navigation-stroke-color);
    stroke-width: var(---kvlm-navigation-stroke-width);

    transition: height 0.3s ease;
    overflow: visible;

    @include utils.container($from: lg) {
      display: none;
    }

    path:nth-child(1n + 2) {
      stroke-dasharray: 25;
      transition: stroke-dashoffset 0.3s ease;
    }

    :host(:not([opened])) & {
      height: utils.size(1.64);
      stroke-dashoffset: 25;
    }

    :host([opened]) & {
      height: utils.size(3.4);
      stroke-dashoffset: 0;
    }

    path {
      transition: d 0.3s ease;
      vector-effect: non-scaling-stroke;
    }
  }
}
