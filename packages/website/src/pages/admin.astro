---
import type { CMS as CMSType } from 'decap-cms-core';
import BaseLayout from '@/layouts/base.layout.astro';

// (1) we need to inject these stuff for @react-refresh manually,
//     despite this being a job of the @astro/react integration
import react from '@vitejs/plugin-react';
const FAST_REFRESH_PREAMBLE = react.preambleCode;

// force trailing slash
if (Astro.url.pathname === '/admin') {
  return Astro.redirect('/admin/');
}

declare global {
  interface Window {
    CMS: CMSType;
    CMS_MANUAL_INIT: boolean;

    // we need to inject these stuff for @react-refresh manually,
    // despite this being a job of the @astro/react integration
    $RefreshReg$: () => any;
    $RefreshSig$: () => (type: any) => any;
    __vite_plugin_react_preamble_installed__: boolean;
  }
}

export const prerender = true;
---

<BaseLayout pageTitle="Administration">
  <meta slot="head" name="robots" content="noindex" />

  <script is:inline slot="head" type="module" define:vars={{ FAST_REFRESH_PREAMBLE }}>
    // (2) as the preamble code is evaluated with new Function(), the import statement
    //     needs to be removed, imported manually, and injected back as argument
    import RefreshRuntime from '/@react-refresh';
    const preamble = FAST_REFRESH_PREAMBLE.replace(/import .*\n/, '');
    new Function('RefreshRuntime', preamble)(RefreshRuntime);
  </script>

  <script>
    window.CMS_MANUAL_INIT = true;

    import CMS from 'decap-cms-app';
    import { createElement as h } from 'react';
    import { config } from '../../decap.config.js';
    import { CmsPreview } from '@/components/cms-preview.component.jsx';
    import { Navigation } from '@/components/navigation.component.jsx';
    import { Page } from '@/components/page.component.jsx';

    // reduce the noise in the console
    // https://github.com/facebook/react/issues/5632
    const { error } = console;
    console.error = (s, ...args) => {
      if (typeof s === 'string' && s.startsWith('Warning: ')) {
        return console.warn(s, ...args);
      }
      return error(s, ...args);
    };

    // load ui components from dev server in development
    const uiRoot = import.meta.env.MODE === 'development' ? 'http://localhost:3500' : '/ui';

    // initialize the CMS
    CMS.init({ config });

    // add preview styles
    CMS.registerPreviewStyle(`${uiRoot}/fonts.css`);
    CMS.registerPreviewStyle(`${uiRoot}/globals.css`);

    // inline some adhoc styles
    const style = `
      body {
        margin: 0;
        font-family: var(--kvlm-font-family-body);
      }
    `;
    const styleUrl = URL.createObjectURL(new Blob([style], { type: 'text/css' }));
    CMS.registerPreviewStyle(styleUrl);

    // register our previews, wrapped in a mapping convenience component
    CMS.registerPreviewTemplate('mainNavigation', ({ entry }) => {
      const { data, slug } = entry.toJS();
      return h(
        CmsPreview,
        { uiRoot },
        h('kvlm-layout', null, h(Navigation, { data, slug, slot: 'header' })),
      );
    });

    CMS.registerPreviewTemplate('pages', ({ entry }) => {
      const { data, slug } = entry.toJS();
      return h(CmsPreview, { uiRoot }, h(Page, { data, slug }));
    });
  </script>
</BaseLayout>
